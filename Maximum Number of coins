//GFG -- Hard -- MakeMyTrip
//C++ code
#include <bits/stdc++.h>
using namespace std;
class Solution{
    public:
        int maxCoins(int N, vector <int> &a)
        {
            // write your code here
            a.insert(a.begin(), 1);
            a.push_back(1);
            int n = a.size();
            vector<vector<int>> dp(n, vector<int>(n, -1));
            return dfs(0, n-1, a, dp);
        }
        int dfs(int l, int r, vector<int>&a, vector<vector<int>>&dp){
            int ans = 0;
            if(dp[l][r] != -1) return dp[l][r];
            for(int i=l+1; i<r; i++){
                ans = max(ans, a[l]*a[i]*a[r]+dfs(l, i, a, dp)+dfs(i, r, a, dp));
            }
            return dp[l][r] = ans;
        }
};
int main(){
    int t;
    cin>>t;
    while(t--)
    {
        int n;
        cin>>n;
        vector<int> a(n);
        for(int i=0;i<n;i++)
            cin>>a[i];
        Solution S;
        cout<<S.maxCoins(n,a)<<endl;
    }
    return 0;
}
