//GFG -- Easy
//C++ Code Below
#include <bits/stdc++.h>
using namespace std;
class Solution{
    public:
    bool is_possible_to_get_seats(int n, int m, vector<int>& seats){
        // Write your code here.
        unordered_set<int> st;
        for(int i=0; i<m; i++){
            if(seats[i]==1) st.insert(i);
        }
        int cnt=0;
        for(int i=0; i<m; i++){
            if(!st.count(i)){
                if(!st.count(i+1) and !st.count(i-1)) {
                    cnt++;
                    st.insert(i);
                }
            }
        }
        return cnt>=n;
    }
};
int main(){

    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int m;
        cin >> m;
        vector<int> seats(m);
        for (int i = 0; i < m; i++) {
            cin >> seats[i];
        }
        Solution obj;
        if (obj.is_possible_to_get_seats(n, m, seats)) {
            cout << "Yes" << endl;
        }
        else {
            cout << "No" << endl;
        }
    }
}
