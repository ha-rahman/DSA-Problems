//GFG -- Hard -- Sprinklr
//C++ Code Below
#include <bits/stdc++.h>
using namespace std;
class Solution {
  public:
    long long countSubarray(int N,vector<int> A,int M) {
        // code here
        return solve(N, A, M) - solve(N, A, M+1);
    }
    long long solve(int n, vector<int>&a, int m){
        vector<int> mp(2*n+1, 0);
        long long cur = n, total = 0, ans = 0;
        mp[cur]++;
        for(int i=0; i<n; i++){
            int x = -1;
            if(a[i] >= m) x = 1;
            if(x == -1) total -= mp[cur+x];
            else total += mp[cur];
            cur += x;
            ans += total;
            mp[cur]++;
        }
        return ans;
    }
};
int main() {
    int t;
    cin >> t;
    while (t--) {
        int N, M;
        cin>>N>>M;
        vector<int> A(N);
        for(int i=0;i<N;i++){
            cin>>A[i];
        }
        Solution obj;
        auto ans = obj.countSubarray(N,A,M);
        cout<<ans<<endl;
    }
}
