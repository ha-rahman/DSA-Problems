//Leetcode -- 1539 -- easy
//C++ code below
class Solution {
public:
    int findKthPositive(vector<int>& arr, int k) {
        int l = 0, r = arr.size()-1;
        while(l <= r)
        {
            int m = l + (r-l)/2;
            if(arr[m] - (m+1) < k) l = m+1;
            else r = m - 1;
        }
        return l+k;
    }
};class Solution:
    def findKthPositive(self, arr: List[int], k: int) -> int:
        l, r = 0, len(arr)-1
        while l <= r:
            m = l + (r - l)//2
            if arr[m] - (m+1) < k: l = m+1
            else: r = m - 1
        return l+k

//Java code below
class Solution {
    public int findKthPositive(int[] arr, int k) {
        int l = 0, r = arr.length-1;
        while(l <= r)
        {
            int m = l + (r-l)/2;
            if(arr[m] - (m+1) < k) l = m+1;
            else r = m - 1;
        }
        return l+k;
    }
}

//Python3 Code below
class Solution:
    def findKthPositive(self, arr: List[int], k: int) -> int:
        l, r = 0, len(arr)-1
        while l <= r:
            m = l + (r - l)//2
            if arr[m] - (m+1) < k: l = m+1
            else: r = m - 1
        return l+k
