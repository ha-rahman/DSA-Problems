//Leetcode -- Medium 
//C++ Code Below
class Solution {
public:
    long long zeroFilledSubarray(vector<int>& nums) {
        long long ans=0, cnt=0;
        for(int i=0; i<nums.size(); i++){
            if(nums[i]==0) cnt++;
            else{
                ans += (cnt*(cnt+1))/2;
                cnt = 0;
            }
        }
        ans += (cnt*(cnt+1))/2;
        return ans;
    }
};

//Java Code below
class Solution {
    public long zeroFilledSubarray(int[] nums) {
        long ans=0, cnt=0;
        for(int i=0; i<nums.length; i++){
            if(nums[i]==0) cnt++;
            else{
                ans += (cnt*(cnt+1))/2;
                cnt = 0;
            }
        }
        ans += (cnt*(cnt+1))/2;
        return ans;
    }
}

//Python3 Code below
class Solution:
    def zeroFilledSubarray(self, nums: List[int]) -> int:
        ans, cnt=0,0
        for i in range(0, len(nums)):
            if nums[i]==0: cnt += 1
            else:
                ans += (cnt*(cnt+1))//2
                cnt = 0
        ans += (cnt*(cnt+1))//2
        return ans
