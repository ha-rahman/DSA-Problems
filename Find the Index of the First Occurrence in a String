//Leetcode -- Medium -- 28
//C++ Code Below
class Solution {
public:
    int strStr(string haystack, string needle) {
        int n = haystack.size(), m = needle.size();
        for(int i=0; i<n-m+1; i++){
            if(haystack[i] == needle[0]){
                if(haystack.substr(i, m) == needle) return i;
            }
        }
        return -1;
    }
};

//Java code below
class Solution {
    public int strStr(String haystack, String needle) {
        int n = haystack.length(), m = needle.length();
        for(int i=0; i<n-m+1; i++){
            if(haystack.charAt(i) == needle.charAt(0)){
                if(haystack.substring(i, m+i).equals(needle)){
                    return i;
                }
            }
        }
        return -1;
    }
}

//Python3 Code Below
class Solution:
    def strStr(self, haystack: str, needle: str) -> int:
        n, m = len(haystack), len(needle)
        for i in range(0, n-m+1):
            if haystack[i] == needle[0]:
                if haystack[i : m+i] == needle: return i
        return -1
