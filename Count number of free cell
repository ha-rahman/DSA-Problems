//GFG -- Easy -- Intuit
//C++ Code Below
#include<bits/stdc++.h>
using namespace std;
class Solution{
  public:
  vector<long long int> countZero(int n, int k, vector<vector<int>>& arr){
      //Code Here
      vector<long long int> ans;
      vector<long long int> row(n, 0), col(n, 0);
      long long int zeros = n*n, cnt = 0, currRow = 0, currCol = 0;
      for(auto x : arr)
      {
          if(row[x[0]-1] != 1)
          {
              cnt += (n-currCol);
              currRow++;
              row[x[0]-1] = 1;
          }
          if(col[x[1]-1] != 1)
          {
              cnt += (n - currRow);
              currCol++;
              col[x[1]-1] = 1;
          }
          ans.push_back(zeros - cnt);
      }
      return ans;
  }
};
int main(){
    int t;
    cin>>t;
    while(t--){
        int n,k;
        cin>>n>>k;
        vector<vector<int>> arr(k,vector<int>(2));
        for(int i=0;i<k;i++){
            int x, y;
            cin>>x>>y;
            arr[i][0] = x;
            arr[i][1] = y;
        }
        Solution ob;
        vector<long long int> ans = ob.countZero(n,k,arr);
        
        for(int i=0;i<ans.size();i++){
            cout<<ans[i]<<" ";
        }
        cout<<endl;    
    }
    
    return 0;
}
