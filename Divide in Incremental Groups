//GFG -- Hard -- Expedia
//C++ Code Below
#include <bits/stdc++.h>
using namespace std;
class Solution {
  public:
    int countWaystoDivide(int N, int K) {
        // Code here
        vector<vector<vector<int>>> dp(N+1, vector<vector<int>>(N+1, vector<int>(K+1, -1)));
        vector<int> arr(N);
        for(int i=0; i<N; i++) arr[i] = i+1;
        return solve(arr, 0, N, K, 0, dp);
    }
    int solve(vector<int>&arr, int i, int n, int k, int sum, vector<vector<vector<int>>>&dp){
        if(sum > n) return 0;
        if(k == 0){
            if(sum == n) return dp[i][sum][k] = 1;
            else return dp[i][sum][k] = 0;
        }
        if(i == arr.size()) return dp[i][sum][k] = 0;
        if(dp[i][sum][k] != -1) return dp[i][sum][k];
        return dp[i][sum][k] = solve(arr, i, n, k-1, sum+arr[i], dp)+solve(arr, i+1, n, k, sum, dp);
    }
};
int main() {
    int t;
    cin >> t;
    while (t--) {
        int N, K;
        cin >> N >> K;
        Solution ob;
        cout << ob.countWaystoDivide(N, K) << endl;
    }
}
