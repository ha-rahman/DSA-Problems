//Leetcode -- Easy
//C++ code below
class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int l = 0, r = nums.size()-1;
        while(l <= r){
            int m = (l+r)/2;
            if(nums[m] == target) return m;
            else if(nums[m] > target) r = m-1;
            else l = m+1;
        }
        return l;
    }
};

//Java Code Below
class Solution {
    public int searchInsert(int[] nums, int target) {
        int l = 0, r = nums.length-1;
        while(l <= r)
        {
            int m = (l+r)/2;
            if(nums[m] == target) return m;
            else if(nums[m] > target) r = m-1;
            else l = m+1;
        }
        return l;
    }
}

//Python3 code below
class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        l, r = 0, len(nums)-1
        while l <= r:
            m = (l+r)//2
            if nums[m] == target: return m
            elif nums[m] > target: r = m-1
            else: l = m + 1
        return l
