//Leetcode -- Medium -- 881
//C++ code below
class Solution {
public:
    int numRescueBoats(vector<int>& people, int limit) {
        sort(people.begin(), people.end());
        int l = 0, r = people.size()-1, ans=0;
        while(l <= r){
            ans++;
            if(people[l]+people[r] <= limit) l++;
            r--;
        }
        return ans;
    }
};

//Java Code Below
class Solution {
    public int numRescueBoats(int[] people, int limit) {
        Arrays.sort(people);
        int l=0, r=people.length-1, ans=0;
        while(l<=r){
            ans++;
            if(people[l]+people[r]<=limit) l++;
            r--;
        }
        return ans;
    }
}

//Python3 Code below
class Solution:
    def numRescueBoats(self, people: List[int], limit: int) -> int:
        people.sort()
        l, r, ans = 0, len(people)-1, 0
        while l<=r:
            ans += 1
            if people[l]+people[r] <= limit:
                l += 1
            r -= 1
        return ans
